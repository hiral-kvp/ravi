 Abstract class & methods
 ---------------------------------------------------------------------------------
 
 Abstract class - A class defined using "abstract" keyword and we cannot creates
		  an object of abstract class. 
                   e.g
                   public abstract class Language { }
 
                   Language l = new Language()<--- Not possible

                   The "abstract" class is only used by inherit it (sub-classing). It
		   means we must have to inherit the abstract class and that's why
		   it is known as "Must Inheritable" class.

                   An abstract class is a partially develop or incomplete class which
		   must be completed by the sub-classes.

Abstract method -  An abstract method is a method without method body (only 		                   declaration) and it must be marked with abstract keyword.

		   An abstract method is also known as "Must Overridable method".

		   If class has an abstract method then class will become abstract
		   so we must have to mark that class with "abstract" keyword.

sealed class    -  The sealed keyword creates "Not Inheritable" class. We cannot 		           inherit sealed classes but we can only instantiate them.

		   sealed & abstract keyword cannot be used together.

  		e.g

		public sealed class Mouse { ... }
                public class MyMouse : Mouse { ... } <--- Can't inherit the sealed
							  class

How to learn .NET libs and its types? 

Use VS "View" Menu + Object Browser. 

 You will find "mscorlib" which is the base class lib. You can use other libs - called  extended lib to understand and know about types.

Example: Program to represent single, multiple choice questions.

using System;
public abstract class Question
{
    public string Text { get; set; }
    public string Ans1 { get; set; }
    public string Ans2 { get; set; }
    public string Ans3 { get; set; }

    public abstract bool IsCorrect { get; }
    public abstract void DisplayQuestion();
}
public class SingleChoice : Question
{
    private int _userChoice, _correctAns;

    public int CorrectAnswer
    {
        get { return _correctAns; }
        set { _correctAns = value; }
    }
    public int UserChoice { get { return _userChoice; } }
    public override void DisplayQuestion()
    {
        Console.WriteLine("Question : " + Text);
        Console.WriteLine("1. " + Ans1);
        Console.WriteLine("2. " + Ans2);
        Console.WriteLine("3. " + Ans3);
        Console.Write("Your choice (1 or 2 or 3 ) : ");
        _userChoice = int.Parse(Console.ReadLine());
    }
    public override bool IsCorrect
    {
        get
        {
            return _userChoice == _correctAns;
        }
    }
}

public class MultiChoice : Question
{
    private int[] _userChoice = new int[3];
    private int[] _correctAns = new int[3];

    public int[] CorrectAnswer
    {
        get { return _correctAns; }
        set { _correctAns = value; }
    }
    public int[] UserChoice { get { return _userChoice; } }
    public override void DisplayQuestion()
    {
        Console.WriteLine("Question : " + Text);
        Console.WriteLine("1. " + Ans1);
        Console.WriteLine("2. " + Ans2);
        Console.WriteLine("3. " + Ans3);
        Console.Write("Your choices : ");
        _userChoice[0] = int.Parse(Console.ReadLine());
        _userChoice[1] = int.Parse(Console.ReadLine());
        _userChoice[2] = int.Parse(Console.ReadLine());
    }
    public override bool IsCorrect
    {
        get
        {
            return _userChoice[0] == _correctAns[0]
                      && _userChoice[1] == _correctAns[1]
                          && _userChoice[2] == _correctAns[2];
        }
    }
}
class Test
{
    static void Main()
    {
        Question[] ques =
        {
           new MultiChoice
        {
            Text = "What is OS?",
            Ans1 = "It is operation system",
            Ans2 = "It is ordinary system",
            Ans3 = "It is operating system",
            CorrectAnswer = new[] { 1,0,1}
        } ,
        new SingleChoice
        {
              Text = "What is OS?",
            Ans1 = "It is operation system",
            Ans2 = "It is ordinary system",
            Ans3 = "It is operating system",
            CorrectAnswer = 2
        },
        new SingleChoice
        {
              Text = "What is OS?",
            Ans1 = "It is operation system",
            Ans2 = "It is ordinary system",
            Ans3 = "It is operating system",
            CorrectAnswer = 1
        },
        new MultiChoice
        {
              Text = "What is OS?",
            Ans1 = "It is operation system",
            Ans2 = "It is ordinary system",
            Ans3 = "It is operating system",
            CorrectAnswer = new[] { 1,1,1}
         }, 
        };

        foreach (var q in ques)
        {
            q.DisplayQuestion();
        }
        Console.WriteLine("Result....");
        int c = 0;
        foreach (var q in ques)
        {
            Console.WriteLine(q.Text + " " 
                + ( q.IsCorrect ? "Correct" : "Incorrect") );
            if (q.IsCorrect)
            {
                c++;
            }
        }
        Console.WriteLine("Total correct answers : " + c);
    }
}

